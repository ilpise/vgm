<?php

/**
 * Implements hook_menu().
*/

function vgm_menu() {
  $items['admin/config/mongoatlas'] = array(
    'title' => 'MongoDB Atlas',
    'page callback' => 'system_admin_menu_block_page', //DONT CHANGE THIS!
    'access arguments' => array('administer site configuration'), // Permission needed to view this area
    'file' => 'system.admin.inc', //DONT CHANGE THIS!
    'file path' => drupal_get_path('module', 'system'), //DONT CHANGE THIS!
  );
  $items['admin/config/mongoatlas/server'] = array(
    'title' => 'MongoDB Atlas',
    'description' => 'Configuration for MongoDB Atlas cluster',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mongoatlas_form'),
    'access arguments' => array('access administration pages'),
  );

  $items['test_mongo_atlas'] = array(
    'title' => 'Test Mongo db Atlas connection',
    'page callback' => 'test_mongo_atlas',
    'access callback' => 'user_is_logged_in',
    'file' => 'test_mongo_atlas.inc',
  );
  $items['visualization'] = array(
    'title' => 'View data',
    'page callback' => 'view_mongo_data',
    'access callback' => 'user_is_logged_in',
    'file' => 'test_mongo_atlas.inc',
  );
  $items['vgm_print_pdf/%'] = array(
    'type' => MENU_CALLBACK,
    // 'title' => 'View data',
    'page arguments' => array(1),
    'page callback' => 'print_pdf',
    'access callback' => 'user_is_logged_in',
    'file' => 'print_pdf.inc',
  );
  return $items;
}

function mongoatlas_form (){
  $form = array();

  $form['cluster_uri'] = array(
    '#type' => 'textfield',
    '#title' => t('Cluster string'),
    '#default_value' => variable_get('cluster_uri', 'mongodb://cluster0-shard-00-00-yikde.mongodb.net:27017,cluster0-shard-00-01-yikde.mongodb.net:27017,cluster0-shard-00-02-yikde.mongodb.net:27017'),
    '#description' => t("The cluster to connect to"),
    '#required' => TRUE,
  );



  return system_settings_form($form);
}

function vgm_theme($existing, $type, $theme, $path){
	$theme = array();
  $theme['test-mongo-atlas-content'] = array(
    'template' => 'templates/test-mongo-atlas-content',
    'variables' => array(),
  );
  $theme['view-mongo-atlas-content'] = array(
    'template' => 'templates/view-mongo-atlas-content',
    'variables' => array(),
  );
  $theme['vgm_node_add'] = array(
    'arguments' => array('form' => NULL),
    'render element' => 'form',
    'template' => 'templates/vgm--node--add',
  );
  $theme['vgm_node_edit'] = array(
    'arguments' => array('form' => NULL),
    'render element' => 'form',
    'template' => 'templates/vgm--node--edit',
  );

	return $theme;
}

function vgm_form_alter(&$form, &$form_state, $form_id) {
  // drupal_set_message("<pre>".print_r($form_id,TRUE)."</pre>");
	if ($form_id == "vgm_node_form"){
    // drupal_set_message("<pre>".print_r($form,TRUE)."</pre>");
    $node = $form_state['node'];
    if (!isset($node->nid) || isset($node->is_new)) {
      // This is a new node.
      unset($form['vgm_place']);
      unset($form['vgm_weight_method']);
      unset($form['vgm_authpeople_ref']);
      $form['#theme'] = array('vgm_node_add');
    }
    else {
      // This is not a new node.
      $form['#theme'] = array('vgm_node_edit');
    }
	}
}


// This two functions are called to fill values and allowed values for
// field_comuni and fild_province inside the profile2 step1anagrafica and step1residenza profile
function _field_comuni_options_list(){
  $comuni = include drupal_get_path('module', 'vgm') . '/assets/comuniallowed.php';
  return $comuni;
}

function _field_province_options_list(){
  $provincie = include drupal_get_path('module', 'vgm') . '/assets/provincie.php';
  return $provincie;
}
